(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{400:function(e,s,a){"use strict";a.r(s);var t=a(43),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"m31-cm1-scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#m31-cm1-scripts"}},[e._v("#")]),e._v(" M31 - CM1 scripts")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#l-exécution"}},[e._v("L'exécution")]),a("ul",[a("li",[a("a",{attrs:{href:"#récupération-des-paramètres"}},[e._v("Récupération des paramètres")])])])]),a("li",[a("a",{attrs:{href:"#les-variables"}},[e._v("Les variables")]),a("ul",[a("li",[a("a",{attrs:{href:"#variables-globales"}},[e._v("Variables globales")])]),a("li",[a("a",{attrs:{href:"#variables-locales-homonymes"}},[e._v("Variables locales homonymes")])])])]),a("li",[a("a",{attrs:{href:"#les-structures-de-contrôle"}},[e._v("Les structures de contrôle")]),a("ul",[a("li",[a("a",{attrs:{href:"#utilisation-des-divers-guillemets"}},[e._v("Utilisation des divers guillemets")])]),a("li",[a("a",{attrs:{href:"#les-caractères-spéciaux"}},[e._v("Les caractères spéciaux")])]),a("li",[a("a",{attrs:{href:"#les-expressions"}},[e._v("les expressions")])]),a("li",[a("a",{attrs:{href:"#la-commande-test"}},[e._v("La commande `test``")])]),a("li",[a("a",{attrs:{href:"#l-instruction-conditionnelle"}},[e._v("L'instruction conditionnelle")])]),a("li",[a("a",{attrs:{href:"#les-instructions-itératives-while"}},[e._v("Les instructions itératives  : WHILE")])]),a("li",[a("a",{attrs:{href:"#les-instructions-itératives-until"}},[e._v("Les instructions itératives : UNTIL")])]),a("li",[a("a",{attrs:{href:"#les-instructions-itératives-for"}},[e._v("Les instructions itératives : FOR")])]),a("li",[a("a",{attrs:{href:"#les-instructions-itératives-case"}},[e._v("Les instructions itératives : CASE")])])])]),a("li",[a("a",{attrs:{href:"#la-commande-awk"}},[e._v("La commande AWK")]),a("ul",[a("li",[a("a",{attrs:{href:"#présentation"}},[e._v("présentation")])]),a("li",[a("a",{attrs:{href:"#syntaxe"}},[e._v("syntaxe")])]),a("li",[a("a",{attrs:{href:"#principe"}},[e._v("principe")])])])])])]),a("p"),e._v(" "),a("h2",{attrs:{id:"l-exécution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#l-exécution"}},[e._v("#")]),e._v(" L'exécution")]),e._v(" "),a("ul",[a("li",[e._v("Enchaînement des commandes ("),a("code",[e._v(";")]),e._v(")")])]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("cd / ; pwd ; ls –al")])])]),e._v(" "),a("p",[e._v("si une des commandes n’existe pas, l’exécution s’arrête.")]),e._v(" "),a("ul",[a("li",[e._v("Exécution en arrière plan ("),a("code",[e._v("&")]),e._v(")")])]),e._v(" "),a("blockquote",[a("p",[e._v("```netscape &````")])]),e._v(" "),a("p",[e._v("l’utilisateur récupère l’interpréteur pour lancer d’autres commandes")]),e._v(" "),a("ul",[a("li",[e._v("Exécution conditionnelle "),a("code",[e._v("&&")]),e._v(" ou "),a("code",[e._v("||")])])]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("cm1 && cm2")]),e._v(" cm2 est exécutée si l’exécution de cm1 a réussi")])]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("cm1 || cm2")]),e._v("  cm2 est exécutée si l’exécution de cm1")])]),e._v(" "),a("h4",{attrs:{id:"exécution-d-un-programme-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exécution-d-un-programme-shell"}},[e._v("#")]),e._v(" Exécution d’un programme shell")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Commande")]),e._v(" "),a("th",[e._v("Conditions sur le fichier")]),e._v(" "),a("th",[e._v("Effet")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("bash nom_fichier")])]),e._v(" "),a("td",[e._v("Fichier lisible")]),e._v(" "),a("td",[e._v("Interprétation par un sous processus shell")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("nom_fichier")])]),e._v(" "),a("td",[e._v("Fichier exécutable dont la première ligne commence par "),a("code",[e._v("#! ref_shell")])]),e._v(" "),a("td",[e._v("Interprétation par un sous processus ref_shell")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("source nom_fichier")])]),e._v(" "),a("td",[e._v("Fichier lisible")]),e._v(" "),a("td",[e._v("Interprétation dans le shell courant")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("exec nom_fichier")])]),e._v(" "),a("td",[e._v("Fichier lisible et exécutable")]),e._v(" "),a("td",[e._v("Recouvrement du csh courant par un csh interprétant le fichier")])])])]),e._v(" "),a("p",[e._v("Un programme shell est un fichier contenant un ensemble de commandes unix. Cet ensemble est interprétable par le shell.")]),e._v(" "),a("p",[e._v("Exemple :\n"),a("code",[e._v("mon_script")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#! /bin/bash  ->  interpréteur de commandes \necho "ceci est un script" -> instruction à exécuter \n')])])]),a("p",[e._v("Exemples d’exécution :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("bash mon_script argument1 argument2 ....")])]),e._v(" "),a("li",[a("p",[e._v("source mon_script argument1 argument2 ...")])]),e._v(" "),a("li",[a("p",[e._v("mon_script argument1 argument2 ....")])])]),e._v(" "),a("p",[e._v("Dans le dernier cas le programme devra :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("commencer par #! Référence d’un shell (ex. #! /bin/bash)")])]),e._v(" "),a("li",[a("p",[e._v("posséder l’attribut d’exécution (x)")])])]),e._v(" "),a("h3",{attrs:{id:"récupération-des-paramètres"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#récupération-des-paramètres"}},[e._v("#")]),e._v(" Récupération des paramètres")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("$0")]),e._v(" nom de la commande")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("$n")]),e._v(" le n-ième paramètre")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("$#")]),e._v(" le nombre de paramètres")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("$*")]),e._v(" la liste de tous les paramètres")])])]),e._v(" "),a("p",[a("em",[a("strong",[e._v("Quelques variables spéciales")])])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("$$")]),e._v(" le numéro du processus de la dernière commande")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("$?")]),e._v(" Statuts de la dernière commande")])])]),e._v(" "),a("p",[a("em",[a("strong",[e._v("Divers")])])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("#")]),e._v(" : commentaires")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("(cmde)")]),e._v(" : exécute la commande dans un sous-shell")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("read a")]),e._v(" : lecture d’une entrée pendant l’exécution")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("exit num")]),e._v(" : renvoie num comme status de la commande")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("nom_fonc() {liste_commandes }")]),e._v(" :  définition d’une fonction")])])]),e._v(" "),a("h2",{attrs:{id:"les-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-variables"}},[e._v("#")]),e._v(" Les variables")]),e._v(" "),a("p",[e._v("Le bourne-shell distingue 2 types de variables :")]),e._v(" "),a("ul",[a("li",[a("p",[a("em",[a("strong",[e._v("les variables locales")])]),e._v(" : visibles uniquement par le processus qui les a créées. Les variables locales du processus père ne sont pas accessibles par le fils.")])]),e._v(" "),a("li",[a("p",[a("em",[a("strong",[e._v("les variables globales")])]),e._v(" : les variables du père sont accessibles et modifiables par le processus fils")])])]),e._v(" "),a("blockquote",[a("p",[e._v("L’ensemble des variables globales est appelé environnement du processus")])]),e._v(" "),a("p",[e._v("Par convention :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Les variables locales sont en minuscules")])]),e._v(" "),a("li",[a("p",[e._v("Les variables globales sont en majuscules")])]),e._v(" "),a("li",[a("p",[e._v("Nom de variable : chaîne de caractères")])])]),e._v(" "),a("p",[e._v("***Accès au contenu d’une variable ***("),a("code",[e._v("$")]),e._v(")")]),e._v(" "),a("blockquote",[a("p",[e._v("Exemple : "),a("code",[e._v("echo $path")])])]),e._v(" "),a("p",[a("em",[a("strong",[e._v("Affectation d’une variable")])]),e._v(" :")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("nomvar = valeur")]),e._v(" -> initialisation d’une variable")])]),e._v(" "),a("p",[a("em",[a("strong",[e._v("Listing des variables déclarées")])]),e._v(" :")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("set")]),e._v(" -> liste des variables")])]),e._v(" "),a("h3",{attrs:{id:"variables-globales"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables-globales"}},[e._v("#")]),e._v(" Variables globales")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("HOME")]),e._v(" : répertoire de connexion de l’utilisateur")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("PATH")]),e._v(" : liste des répertoires de recherche des commandes")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("PWD")]),e._v(" : répertoire courant")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("TERM")]),e._v(" : type de terminal utilisé")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("SHELL")]),e._v(" : nom du shell utilisé")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("USER")]),e._v(" : nom de l’utilisateur")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("DISPLAY")]),e._v(" : localisation de l’affichage")])])]),e._v(" "),a("h3",{attrs:{id:"variables-locales-homonymes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables-locales-homonymes"}},[e._v("#")]),e._v(" Variables locales homonymes")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("status")]),e._v(" : code de retour de la dernière commande")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("prompt")]),e._v(" : chaîne de caractères utilisée comme invite")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("home")]),e._v(" : répertoire de connexion de l’utilisateur")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("path")]),e._v(" : liste des répertoires de recherche des commandes")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("term")]),e._v(" : type de terminal utilisé")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("shell")]),e._v(" : nom du shell utilisé")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("user")]),e._v(" : nom de l’utilisateur")])])]),e._v(" "),a("p",[e._v("Toute modification d’une de ces variables entraîne la modification de la variable globale correspondante. Par contre l’inverse n’est pas vrai.")]),e._v(" "),a("h2",{attrs:{id:"les-structures-de-contrôle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-structures-de-contrôle"}},[e._v("#")]),e._v(" Les structures de contrôle")]),e._v(" "),a("p",[e._v("Un shell est un interpréteur de langage de commandes. Il a 2 rôles :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Un rôle "),a("em",[a("strong",[e._v("interactif")])]),e._v(" : l’utilisateur peut exécuter directement des commandes")])]),e._v(" "),a("li",[a("p",[e._v("Un rôle de "),a("em",[a("strong",[e._v("langage de programmation")])]),e._v(" : le shell exécute les commandes contenues dans un fichier")])])]),e._v(" "),a("p",[e._v("Sous unix, il existe plusieurs shells :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Le C-shell (csh) ou turbo C-shell (tcsh)")])]),e._v(" "),a("li",[a("p",[e._v("Le Korn-shell (ksh)")])]),e._v(" "),a("li",[a("p",[e._v("Le Bourne-shell (sh) ou le Bourne-Again-Shell (bash)")])])]),e._v(" "),a("p",[e._v("La liste des shells disponibles se trouve dans /etc/shells")]),e._v(" "),a("h3",{attrs:{id:"utilisation-des-divers-guillemets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utilisation-des-divers-guillemets"}},[e._v("#")]),e._v(" Utilisation des divers guillemets")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("'")]),e._v(" : une chaîne de caractères mise entre simple quotes ne sera pas interprétée par le shell")])]),e._v(" "),a("li",[a("p",[a("code",[e._v('"')]),e._v(" : seuls les métacaractères ("),a("code",[e._v("$")]),e._v(", "),a("code",[e._v("`")]),e._v(" et "),a("code",[e._v("\\")]),e._v(") sont interprétés, les autres seront pas interprétés.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("`")]),e._v(" : un texte entre quotes inversés est considéré comme une commande à exécuter.")])])]),e._v(" "),a("p",[a("strong",[e._v("Exemples :")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("echo 'ceci est une chaine de caractères non interprétée'\necho `pwd`\necho \"Le répertoire courant de l’utilisateur $user est `pwd`\"\n")])])]),a("h3",{attrs:{id:"les-caractères-spéciaux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-caractères-spéciaux"}},[e._v("#")]),e._v(" Les caractères spéciaux")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("\\")]),e._v("          banalise le caractère suivant")])]),e._v(" "),a("li",[a("p",[a("code",[e._v('"..."')]),e._v("    banalise les caractères sauf , $, et `")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("' ... '")]),e._v("  banalise tous les caractères")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("`...`")]),e._v("   substitution de commande")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("*")]),e._v("       n ’importe quelle chaîne de caractères")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("?")]),e._v("      n ’importe quel caractère")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("[...]")]),e._v("  n ’importe quel caractère décrit entre les crochets")])])]),e._v(" "),a("p",[e._v("Toute chaîne précédée du caractère "),a("code",[e._v("#")]),e._v(" est un commentaire.")]),e._v(" "),a("h3",{attrs:{id:"les-expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-expressions"}},[e._v("#")]),e._v(" les expressions")]),e._v(" "),a("p",[e._v("Syntaxe : expr expr oper1 op oper2")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("expr exp1 \\| exp2")]),e._v("       exécute les opérations arithmétiques sur les opérandes oper1 et oper2 (+, -, *, /, %, =, >, >=, <, <=, !=)")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("expr exp1 \\& exp2")]),e._v("       renvoie exp1 si l’expression est non nulle, exp2 sinon")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("expr exp1 : exp2")]),e._v("        renvoie exp1 si exp1 et exp2 sont non nuls, 0 sinon")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("expr length exp")]),e._v("         renvoie le nombre de caractères en commun dans les deux arguments")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("expr substr exp n1 n2")]),e._v("   retourne le nombre de caractères de exp retourne la chaîne de caractères exp où les caractères n1 ont été remplacés par n2")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("expr index exp car")]),e._v("      retourne la position du caractère car dans la chaîne exp")])])]),e._v(" "),a("h3",{attrs:{id:"la-commande-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#la-commande-test"}},[e._v("#")]),e._v(" La commande ```test````")]),e._v(" "),a("p",[e._v("La commande permet de valider une condition")]),e._v(" "),a("p",[a("strong",[e._v("Syntaxe")])]),e._v(" "),a("p",[a("code",[e._v("test express")]),e._v(" ou "),a("code",[e._v("[ express ]")])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("-r fichier")]),e._v("   vrai si l’utilisateur a le droit de lecture sur fichier")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-w fichier")]),e._v("   vrai si l ’utilisateur a le droit d ’écriture sur fichier")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-x fichier")]),e._v("   vrai si l ’utilisateur a le droit d ’exécution sur fichier")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-e fichier")]),e._v("   vrai si fichier existe")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-f fichier")]),e._v("   vrai si fichier est un fichier régulier")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-d fichier")]),e._v("   vrai si fichier est un répertoire")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-s fichier")]),e._v("   vrai si la taille de fichier est non nulle")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-o fichier")]),e._v("   vrai si l’utilisateur est propriétaire du fichier")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("s1 == s2")]),e._v(" vrai si les deux expressions sont égales")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("s1 != s2")]),e._v(" vrai si les deux expressions sont différentes")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("s1")]),e._v("  vrai si s1 n ’est pas la chaîne nulle")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("e1 -eq e2")]),e._v("             vrai si les deux entiers e1 et e2 sont égaux (autres comparaisons: -ne, -gt, -ge, -lt, -le)")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("!")]),e._v("                     Négation unaire")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-a")]),e._v("                    opération binaire ET")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-o")]),e._v("                    opération binaire OU")])])]),e._v(" "),a("p",[a("strong",[e._v("Exemples :")])]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("test $val -le 20 -a $val -ge 0")]),e._v(" -> la variable val est comprise entre 0 et 20")])]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v('test "$chaine" != ""')]),e._v(" -> la variable chaîne est différente de vide")])]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("Remarque")]),e._v(" "),a("p",[e._v("le caractère espace est nécessaire avant et après un des opérateurs ci-dessus")])]),e._v(" "),a("h3",{attrs:{id:"l-instruction-conditionnelle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#l-instruction-conditionnelle"}},[e._v("#")]),e._v(" L'instruction conditionnelle")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" condition \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" \ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("ou")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" condition \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v(" \ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[a("em",[a("strong",[e._v("Exemple :")])])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("find")]),e._v(" / -name main*.c\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"fonction main trouvée"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"fonction main non trouvée"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Autre façon")]),e._v(" :")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" \ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("ou")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v(" \ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[a("em",[a("strong",[e._v("Exemple :")])])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(" -lt "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(' plus petit que 5 "')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(' plus grand que 5"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[a("strong",[e._v("If en cascade :")])]),e._v(" "),a("p",[e._v("un seul fi sur la totalité de la structure.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("elif")]),e._v(" condition \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\ninstructions \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" \ninstructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("h3",{attrs:{id:"les-instructions-itératives-while"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-instructions-itératives-while"}},[e._v("#")]),e._v(" Les instructions itératives  : WHILE")]),e._v(" "),a("p",[a("strong",[e._v("Syntaxe :")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    instructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Exemple")]),e._v(" :")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$n")]),e._v(" -lt "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$n")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("expr")]),e._v(" $n + "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("ul",[a("li",[a("p",[e._v("Les instructions sont exécutées tant que la condition est vraie.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Remarque")]),e._v(" : une expression de valeur nulle est considérée comme fausse, tout autre valeur est considérée comme vraie")])])]),e._v(" "),a("h3",{attrs:{id:"les-instructions-itératives-until"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-instructions-itératives-until"}},[e._v("#")]),e._v(" Les instructions itératives : UNTIL")]),e._v(" "),a("p",[a("strong",[e._v("Syntaxe")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("until")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    instructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Exemple")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("until")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$n")]),e._v(" -gt "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$n")]),e._v(" \n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("expr")]),e._v(" $n + "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("h3",{attrs:{id:"les-instructions-itératives-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-instructions-itératives-for"}},[e._v("#")]),e._v(" Les instructions itératives : FOR")]),e._v(" "),a("p",[a("strong",[e._v("Syntaxe")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[e._v("param")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" liste \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    instructions\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Exemple")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[e._v("i")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$i")]),e._v(" /dir/"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$i")]),e._v(" \n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$i")]),e._v(' copie"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\n")])])]),a("ul",[a("li",[a("p",[e._v("La variable para prend successivement les valeurs de la liste")])]),e._v(" "),a("li",[a("p",[e._v("Si la liste est omise, param prend alors les valeurs passées en paramètres")])])]),e._v(" "),a("h3",{attrs:{id:"les-instructions-itératives-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-instructions-itératives-case"}},[e._v("#")]),e._v(" Les instructions itératives : CASE")]),e._v(" "),a("p",[a("strong",[e._v("Syntaxe")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" para "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v("\n    choix1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" instructions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    choix2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" choix3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" instructions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("esac")]),e._v("\n")])])]),a("p",[a("strong",[e._v("Exemple")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("case")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v("\n -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rmdir")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n -o "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"option -o"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n * "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"reponse incorrecte "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("esac")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"la-commande-awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#la-commande-awk"}},[e._v("#")]),e._v(" La commande AWK")]),e._v(" "),a("h3",{attrs:{id:"présentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#présentation"}},[e._v("#")]),e._v(" présentation")]),e._v(" "),a("p",[a("code",[e._v("awk")]),e._v(" (Aho, Weinberger et Kernighan) est une commande très puissante, c'est un langage de programmation qui permet l’écriture des filtres.")]),e._v(" "),a("p",[e._v("Elle permet :")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("une recherche de chaînes et l'exécution d'actions sur les lignes sélectionnées.")])]),e._v(" "),a("li",[a("p",[e._v("de récupérer de l'information, générer des rapports, transformer des données.")])])]),e._v(" "),a("p",[e._v("Une grande partie de la syntaxe a été empruntée au langage c, d'ailleurs awk sont les abréviations de ces 3 créateurs dont k pour Kernighan, un des inventeurs du C.")]),e._v(" "),a("h3",{attrs:{id:"syntaxe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntaxe"}},[e._v("#")]),e._v(" syntaxe")]),e._v(" "),a("p",[a("code",[e._v("awk [-F] [-v var=valeur] 'programme' fichier")])]),e._v(" "),a("p",[e._v("ou\n"),a("code",[e._v("awk [-F] [-v var=valeur] -f fichier-config fichier")])]),e._v(" "),a("p",[a("strong",[e._v("Les arguments :")])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("-F")]),e._v(" doit être suivi du séparateur de champ ("),a("code",[e._v("-F:")]),e._v(' pour un ":" comme séparateur de champ).')])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-f")]),e._v(" suivi du nom du fichier de configuration de awk.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-v")]),e._v(" définit une variable (var dans l'exemple) qui sera utilisée par la suite dans le programme.")])])]),e._v(" "),a("p",[e._v("Un programme awk possède la structure suivante: critère de sélection d'une chaîne {action}, quand il n'y a pas de critère c'est que l'action s'applique à toutes les lignes du fichier.")]),e._v(" "),a("h3",{attrs:{id:"principe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#principe"}},[e._v("#")]),e._v(" principe")]),e._v(" "),a("p",[e._v("Un "),a("strong",[e._v("enregistrement")]),e._v(" est une chaîne de caractères séparée par un retour chariot.")]),e._v(" "),a("p",[e._v("Un "),a("strong",[e._v("champs")]),e._v(" est une chaîne de caractères séparée par un espace (ou par le caractère spécifié par l'option -F)")]),e._v(" "),a("p",[e._v("La variable "),a("strong",[e._v("NF")]),e._v(" contient le nombre de champs de l'enregistrement courant. On accède à chaque champs par la variable $1, $2, ... $NF. $0 correspond à l'enregistrement complet.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("~> cat /tmp/passwd\n\nkmouhri:x:1410:130:Karim:Mouhri:/user1/info1/groupe2/kmouhri:/bin/tcsh \ndjiar:x:1411:130:Hanane:DJIAR:/user1/info1/groupe3/djiar:/bin/tcsh \nslhomme:x:1412:130:Sylvain:LHOMME:/user1/info1/groupe1/slhomme:/bin/tcsh\n\n~> awk -F \":\" '{ print $5,$6 }' /tmp/passwd \n\nKarim Mouhri\nHanane DJIAR\nSylvain LHOMME\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);